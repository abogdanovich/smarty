# -*- coding: utf-8 -*-

#########################################################################
# Smarty home system module
# Django celery tasks
# author Alex Bogdanovich
# 2013 
#########################################################################

from celery.task import periodic_task
from celery.schedules import crontab
import utils
import ow

#########################################################################

#########################################################################
# task1 опрос датчиков температуры, влажности воздуха, датчика осадков
# period = всегда каждые 5 минут
# сохранение данных, построение графиков температуры, влажности
#########################################################################
# for test - опрос каждую минуту

@periodic_task(ignore_result=True, run_every=crontab(hour="*", minute="*/5", day_of_week="*"))
def get_temperature():
    # берем все датчики и по очереди каждого опрашиваем
    sensors = utils.get_sensors(28) #get only 28 family type sensors

    #заносим в монитор события опроса
    message = u"программа получения температуры стратовала"
    utils.save_monitor(message, 0)
    
    ow.init(utils.owserver)
    
    for s in sensors:
	try:
	    s_temp = ow.Sensor(str('/' + s.address)).temperature
	    # если было накопление error на сенсоре- обнуляем его в случае нормальной работы
	    
	    if s_temp:
		if utils.save_temperature(s.address, s_temp):
		    message = u"сохранения данных датчика: %s" % (s.alias)
		    #print message
		    utils.save_monitor(message, 0)
		else:
		    message = u"ошибка сохранения данных датчика: %s" % (s.alias)
		    #print message
		    utils.save_monitor(message, 0)
		    
	except:
	    # если датчик не отвечает - увеличиваем поле errors заносим alarm
	    utils.update_sensor_errors(s.address, 1) #sensor error! set+1 for sensor errors

    message = u"опрос датчиков температуры завершен"
    utils.save_monitor(message, 0)
    
#########################################################################

# TODO: сделать возможно управлять поливом и освещением по месячно, динамично меняя через web сайт
# тогда система будет каждую минуту будет проверять в базе на дату и время (можно ли это сделать)




#########################################################################
# task2 опрос датчиков уровня канализации, 2 канализации по 4 положения в каждом = 8 ног
# датчик DS2408 POI_0..POI_7
# period = всегда каждые 5 минут
# сохранение данных в зависимости от полученных данных, если изменилось
# состояние от предыдущего - 1 положение = 25% заполнение ёмкости  
@periodic_task(ignore_result=True, run_every=crontab(hour="*", minute="*/5", day_of_week="*"))
def get_sewage():
    # берем все датчики и по очереди каждого опрашиваем
    sensor = utils.get_sensor(str('293EA141E1FC6712')) #get only 28 family type sensors

    #заносим в монитор события опроса
    message = u"программа получения уровня канализации стратовала"
    utils.save_monitor(message, 0)
    
    ow.init(utils.owserver)
    
    try:
	print sensor.address
	data = ow.Sensor(str('/' + sensor.address)).PIO_ALL
	#print s_sewage
	
	# если было накопление error на сенсоре- обнуляем его в случае нормальной работы
	
	if data:
	    if utils.save_pio(sensor.address, data):
		message = u"сохранения данных датчика: %s" % (sensor.alias)
		#print message
		utils.save_monitor(message, 0)
	    else:
		message = u"ошибка сохранения данных датчика: %s" % (sensor.alias)
		#print message
		utils.save_monitor(message, 0)
		
    except:
	# если датчик не отвечает - увеличиваем поле errors заносим alarm
	utils.update_sensor_errors(sensor.address, 1) #sensor error! set+1 for sensor errors

    message = u"программа получения уровня канализации ЗАВЕРШЕНА"
    utils.save_monitor(message, 0)




#########################################################################

#########################################################################
# task3 включение автополива с проверкой:
# 1. можно ли поливать (анализ датчика осадков)
# 2. проверка - есть ли вода - тогда включаем и проверяем что клапана включились
# датчик DS2408 POI_0..POI_7
#########################################################################

#########################################################################
# task4 выключение автополива с проверкой:
# проверка выключена ли вода
# датчик DS2408 POI_0..POI_7
#########################################################################

#########################################################################
# task5 включение наружного освещения с проверкой на датчик освещения (достаточно ли темно)
# датчик DS2408 POI_0..POI_7
# TODO: проверка включения освещения через датчик освещение или напряжение
#########################################################################

#########################################################################
# task6 выключение наружного освещения с проверкой на датчик освещения (достаточно ли темно)
# проверка датчика освещения (действительно ли выключилось освещение)
# датчик DS2408 POI_0..POI_7
# TODO: проверка включения освещения через датчик освещение или напряжение
#########################################################################
